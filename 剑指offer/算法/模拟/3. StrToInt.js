/**
 * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
 *
 *
 * @param s string字符串
 * @return int整型
 *
 * 把字符串转换成整数(atoi)
 *
 * 1.去掉无用的前导空格
 * 2.第一个非空字符为+或者-号时，作为该整数的正负号，如果没有符号，默认为正数
 * 3.判断整数的有效部分：
 * 3.1 确定符号位之后，与之后面尽可能多的连续数字组合起来成为有效整数数字，如果没有有效的整数部分，那么直接返回0
 * 3.2 将字符串前面的整数部分取出，后面可能会存在存在多余的字符(字母，符号，空格等)，这些字符可以被忽略，它们对于函数不应该造成影响
 * 3.3  整数超过 32 位有符号整数范围 [−231,  231 − 1] ，需要截断这个整数，使其保持在这个范围内。具体来说，小于 −231的整数应该被调整为 −231 ，大于 231 − 1 的整数应该被调整为 231 − 1
 * 4.去掉无用的后导空格
 *
 * 输入："82"
 * 返回值：82
 */
function StrToInt(s) {
    // write code here
    const match = s.trim().match(/^[+-]?\d+/)
    if (!match) return 0
    const num = parseInt(match, 10) // 转换成10进制
    return Math.max(Math.min(num, 2 ** 31 - 1), -(2 ** 31))
}
